//cria uma pasta com as imagens na tua pasta onde ta os arquivo .c do teu jogo
//


#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <allegro5/allegro.h>
#include <allegro5/allegro_font.h>
#include <allegro5/allegro_primitives.h>
#include <allegro5/allegro_image.h>

#define TAMANHO_TELA_X 800
#define TAMANHO_TELA_Y 800



void desenharTabuleiro(ALLEGRO_BITMAP *tabuleiroImage) { //função p garantir q o bitmap fique do tamanho que for definido o tamanho da tela
    al_draw_scaled_bitmap(tabuleiroImage, 0, 0, al_get_bitmap_width(tabuleiroImage), al_get_bitmap_height(tabuleiroImage),
                          0, 0, TAMANHO_TELA_X, TAMANHO_TELA_Y, 0);
}

struct peca{
    int posX;
    int posY;
    int cor;
};

void inicializarTabuleiro(struct peca(*mat)[6][6]){
  int i,j;

  ALLEGRO_BITMAP *player1 = al_load_bitmap("img_trab/player1.png");
  ALLEGRO_BITMAP *player2 = al_load_bitmap("img_trab/player2.png"); // eh assim q se declara o bitmap
    for(i=0;i<6;i++){
        for(j=0;j<6;j++){
         (*mat)[i][j].cor=0;
         (*mat)[i][j].posX=220+(73*i);
         (*mat)[i][j].posY=220+(73*j);
         if(j<2){
            (*mat)[i][j].cor=1;
            al_draw_bitmap_region(player1,0,0,55,55,(*mat)[i][j].posX-30,(*mat)[i][j].posY-30,0);
         }
         else if(j>3){
            (*mat)[i][j].cor=2;
            al_draw_bitmap_region(player2,0,0,55,55,(*mat)[i][j].posX-30,(*mat)[i][j].posY-30,0);
         }


        }
    }
}


void redesenharTabuleiro(struct peca(*mat)[6][6]){
    int i,j;
    ALLEGRO_BITMAP *player1 = al_load_bitmap("img_trab/player1.png");
    ALLEGRO_BITMAP *player2 = al_load_bitmap("img_trab/player2.png");
    for(i=0;i<6;i++){
        for(j=0;j<6;j++){
         if((*mat)[i][j].cor != 0){
            al_draw_bitmap_region((*mat)[i][j].cor==1 ? player1:player2 ,0,0,55,55,(*mat)[i][j].posX-30,(*mat)[i][j].posY-30,0);
            }
        }
    }
}

struct peca selecionarPeca(struct peca(*mat)[6][6], int posX, int posY) {
    int i, j, minY = posY - 30, maxY = posY + 30, minX = posX - 30, maxX = posX + 30;

    for (i = 0; i < 6; i++) {
        for (j = 0; j < 6; j++) {
            if ((*mat)[i][j].posY > minY && (*mat)[i][j].posY < maxY && (*mat)[i][j].posX > minX && (*mat)[i][j].posX < maxX) {
                return (*mat)[i][j];
            }
        }
    }

    struct peca pecaVazia = { 0, 0, 0 };
    return pecaVazia;
}

void moverPeca(struct peca(*mat)[6][6], struct peca pecaSelecionada, int cliqueY, int cliqueX) {
    int i, j;

    for (i = 0; i < 6; i++) {
        for (j = 0; j < 6; j++) {
            if ((*mat)[i][j].cor == pecaSelecionada.cor && (*mat)[i][j].posX == pecaSelecionada.posX && (*mat)[i][j].posY == pecaSelecionada.posY) {
                (*mat)[i][j].posX = cliqueX - 30; // Ajuste da posição X
                (*mat)[i][j].posY = cliqueY - 30; // Ajuste da posição Y
            }
        }
    }
}





int main(int argc, char **argv) {
    ALLEGRO_DISPLAY *janela = NULL;
    ALLEGRO_FONT *font = NULL;
    ALLEGRO_EVENT_QUEUE *fila_eventos = NULL;

    al_init();
    al_init_font_addon();
    al_init_primitives_addon();
    al_install_mouse();
    al_install_keyboard();
    al_init_image_addon();

    font = al_create_builtin_font();
    fila_eventos = al_create_event_queue();

    janela = al_create_display(TAMANHO_TELA_X, TAMANHO_TELA_Y);

    al_register_event_source(fila_eventos, al_get_display_event_source(janela));
    al_register_event_source(fila_eventos, al_get_mouse_event_source());
    al_register_event_source(fila_eventos, al_get_keyboard_event_source());
    ALLEGRO_BITMAP *tabuleiroImage = al_load_bitmap("img_trab/tabuleir_.png");
    ALLEGRO_BITMAP *tutorial = al_load_bitmap("img_trab/tutorial.png"); // declaração do bitmap

    struct peca tabuleiro[6][6];
    struct peca pecaSelecionada;

    double lastTempo = 0, tempo = 0;

    int menuSelecionado = -1;
    int rodando = 1, mouseX = 0, mouseY = 0,cliqueX=0,cliqueY=0;
    int exibirTabuleiro = 0;


    while (rodando) {

        while (!al_is_event_queue_empty(fila_eventos)) {
            ALLEGRO_EVENT evento;
            al_wait_for_event(fila_eventos, &evento);


            if (evento.type == ALLEGRO_EVENT_DISPLAY_CLOSE) {
                rodando = 0;
            }



            if (evento.type == ALLEGRO_EVENT_MOUSE_BUTTON_DOWN) {
                mouseX = evento.mouse.x;
                mouseY = evento.mouse.y;

                if (mouseX >= 100 && mouseX <= 300 && mouseY >= 200 && mouseY <= 240) {
                    menuSelecionado = 0;
                    exibirTabuleiro = 1;  // Ativa a exibição do tabuleiro
                } else if (mouseX >= 100 && mouseX <= 300 && mouseY >= 260 && mouseY <= 300) {
                    menuSelecionado = 1;
                    exibirTabuleiro = 0;  // Desativa a exibição do tabuleiro
                } else if (mouseX >= 100 && mouseX <= 300 && mouseY >= 320 && mouseY <= 360) {
                    menuSelecionado = 2;
                } else if (mouseX >= 100 && mouseX <= 300 && mouseY >= 380 && mouseY <= 420) {
                    menuSelecionado = 3;
                } else if (mouseX >= 100 && mouseX <= 300 && mouseY >= 440 && mouseY <= 480) {
                    menuSelecionado = 4;
                }
            }
        }
        // Desenhar o menu
        al_draw_filled_rectangle(100, 200, 300, 240, menuSelecionado == 0 ? al_map_rgb(255, 0, 0) : al_map_rgb(0, 0, 255));
        al_draw_text(font, al_map_rgb(255, 255, 255), 200, 210, ALLEGRO_ALIGN_CENTRE, "Player Vs Player");

        al_draw_filled_rectangle(100, 320, 300, 360, menuSelecionado == 2 ? al_map_rgb(255, 0, 0) : al_map_rgb(0, 0, 255));
        al_draw_text(font, al_map_rgb(255, 255, 255), 200, 330, ALLEGRO_ALIGN_CENTRE, "Tutorial");

        al_draw_filled_rectangle(100, 380, 300, 420, menuSelecionado == 3 ? al_map_rgb(255, 0, 0) : al_map_rgb(0, 0, 255));
        al_draw_text(font, al_map_rgb(255, 255, 255), 200, 390, ALLEGRO_ALIGN_CENTRE, "Historico");

        al_draw_filled_rectangle(100, 440, 300, 480, menuSelecionado == 4 ? al_map_rgb(255, 0, 0) : al_map_rgb(0, 0, 255));
        al_draw_text(font, al_map_rgb(255, 255, 255), 200, 450, ALLEGRO_ALIGN_CENTRE, "Sair");

        while(menuSelecionado==0){
            ALLEGRO_EVENT evento;


            ALLEGRO_EVENT_QUEUE *filaeventos = NULL;
            filaeventos = al_create_event_queue();
            al_register_event_source(filaeventos, al_get_mouse_event_source());
            al_register_event_source(filaeventos, al_get_display_event_source(janela));

            int flag=0;
            if (exibirTabuleiro) {
                flag=1;
                desenharTabuleiro(tabuleiroImage);
                inicializarTabuleiro(tabuleiro);
                while(flag){
                    al_wait_for_event(filaeventos, &evento);
                    al_flip_display();
                    if(evento.type == ALLEGRO_EVENT_MOUSE_BUTTON_DOWN) {
                        mouseX = evento.mouse.x;
                        mouseY = evento.mouse.y;
                        pecaSelecionada = selecionarPeca(tabuleiro,mouseX,mouseY);
                        printf("%d %d %d\n",pecaSelecionada.cor,pecaSelecionada.posX,pecaSelecionada.posY);
                        moverPeca(tabuleiro,pecaSelecionada,mouseY,mouseX);
                    }
                   redesenharTabuleiro(tabuleiro);
                   al_flip_display();

            }
          }
        }


        if(menuSelecionado==2){
            desenharTabuleiro(tutorial);
        }
        else if(menuSelecionado==4){
            rodando = 0;
        }

        al_flip_display();
    }

    al_destroy_event_queue(fila_eventos);
    al_destroy_bitmap(tabuleiroImage);
    al_destroy_display(janela);
    return 0;
}
